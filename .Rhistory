axis.text.x = element_text( size=20, face="bold"),panel.border = element_blank()
)
plot.list[[1]]<-plot.list[[1]]+theme(legend.position = "bottom",
axis.title.y = element_text( size=20, face="bold"),
axis.text.x = element_text( size=20, face="bold"))
legend = gtable_filter(ggplot_gtable(ggplot_build(plot.list[[1]])), "guide-box")
ml<-grid.arrange(arrangeGrob(   plot.list[[1]]+theme(legend.position = "none"),
plot.list[[2]],
nrow = 1,ncol=2),legend, ncol=1,nrow=2,widths=10 ,heights=c(10,.5))
library(gtable)
legend = gtable_filter(ggplot_gtable(ggplot_build(plot.list[[1]])), "guide-box")
ml<-grid.arrange(arrangeGrob(   plot.list[[1]]+theme(legend.position = "none"),
plot.list[[2]],
nrow = 1,ncol=2),legend, ncol=1,nrow=2,widths=10 ,heights=c(10,.5))
plot.list<-list()
plot.list[[1]]<-  ggplot(plot.data[[1]], aes(x=No_prior, y=with_prior, colour=plot.data[[1]][,3])) +
geom_point(aes(colour=plot.data[[1]][,3]), size=5) + ylim(c(0,1))+xlim(c(0,1))+
geom_point(shape = 1,size = 5,colour = "black")+
theme_bw()+geom_abline(intercept = 0,slope=1,color='grey',alpha=0.5)+
ggtitle('CS model: Comparison of AUROC')+
#scale_colour_gradient(low = "red", high = "firebrick4")+
scale_colour_gradient2(low = "red", high = "red4",limits=c(0,1))+
guides(colour=guide_legend(title="AUPR of Prior Probs."))+
ylab('AUROC with Annot.')+xlab('AUROC no Annot.')+theme(
plot.title = element_text( size=24, face="bold.italic"),
axis.title.x = element_text( size=20, face="bold"),
legend.position = "none",
legend.title=element_text(size=15),
legend.text=element_text(size=15),
panel.border = element_blank()
)
plot.list[[2]]<-  ggplot(plot.data[[2]], aes(x=No_prior, y=with_prior, colour=plot.data[[2]][,3])) +
geom_point(aes(colour=plot.data[[2]][,3]), size=5) + ylim(c(0,1))+xlim(c(0,1))+
geom_point(shape = 1,size = 5,colour = "black")+
theme_bw()+geom_abline(intercept = 0,slope=1,color='grey',alpha=0.5)+
ggtitle('CS model: Comparison of AUPR')+
#scale_colour_gradient(low = "red", high = "firebrick4")+
scale_colour_gradient2(low = "red", high = "red4",breaks=c(0,0.25,0.5,0.75,1),labels=c(0,0.25,0.5,0.75,1))+
guides(colour=guide_legend(title="AUPR of Prior Probs."))+
ylab('AUPR with Annot.')+xlab('AUPR no Annot.')+theme(
plot.title = element_text( size=24, face="bold.italic"),
axis.title.x = element_text( size=20, face="bold"),
legend.position = "none",
legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.title.y = element_text( size=20, face="bold"),
axis.text.x = element_text( size=20, face="bold"),panel.border = element_blank()
)
plot.list[[1]]<-plot.list[[1]]+theme(legend.position = "bottom",
axis.title.y = element_text( size=20, face="bold"),
axis.text.x = element_text( size=20, face="bold"))
legend = gtable_filter(ggplot_gtable(ggplot_build(plot.list[[1]])), "guide-box")
ml<-grid.arrange(arrangeGrob(   plot.list[[1]]+theme(legend.position = "none"),
plot.list[[2]],
nrow = 1,ncol=2),legend, ncol=1,nrow=2,widths=10 ,heights=c(10,.5))
ggsave('/Users/liam/Dropbox/Prior_info/FINEMAPPING/Report/Real_data_anlaysis/plots/AUROC_AUPR_improve_prior.pdf', ml,
width  = unit(16, "inch"), height = unit(8, "inch"))
ggsave('/Users/zikunyang/Dropbox/Prior_info/FINEMAPPING/Report/Real_data_anlaysis/plots/AUROC_AUPR_improve_prior.pdf', ml,
width  = unit(16, "inch"), height = unit(8, "inch"))
##########Validate
which.min(plot.data[[1]]$No_prior)
plot.data[[1]]$No_prior[30]
##########Validate
which.min(plot.data[[1]]$with_prior)
plot.data[[1]]$with_prior[22]
plot(plot.data[[1]]$with_prior)
h=22
g
match.index<-match(paste0('post_large_',ref.table$chr[h],'_',
as.character(ref.table$region_start [h]),'_',ref.table$region_end[h]),  substr(files.names,1,regexpr('FALSE',files.names)-2))
print(match.index)
cs.results<-read.table(paste0('post_large_',ref.table$chr[h],'_',
as.character(ref.table$region_start [h]),'_',ref.table$region_end[h],'_FALSE.txt'),)
head(cs.results)
plot(cs.results)
plot(cs.results$V1)
true.beta<-which(tbeta[[h]]!=0)
points(true.beta,cs.results$V1[true.beta],col=2)
true.beta<-which(tbeta[[h]]!=0)
pain.re<-read.table(paste0('/Volumes/My_Passport/PAINTOR_V3.0/output/',batch.index,'_batch/',
labels,'/',paintor.index[g],'/',ref.table$chr[h],'_',
as.character(ref.table$region_start [h]),'_',ref.table$region_end[h],'.results'),header = T)
roc.re<-roc(na.omit(tbeta[[h]]!=0)~(pain.re$Posterior_Prob))
aupr<-aupr.fun(pain.re$Posterior_Prob,na.omit(tbeta[[h]]!=0))
result.table.noprior$paintor.roc [h]<-roc.re$auc
result.table.noprior$paintor.aupr[h]<-aupr$auc.davis.goadrich
susie.re<-susie.result.list[[1]][[h]]$pip
susie.roc.re<-roc(na.omit(tbeta[[h]]!=0)~(susie.re))
susie.aupr<-aupr.fun(susie.re,na.omit(tbeta[[h]]!=0))
result.table.noprior$susie.roc [h]<-susie.roc.re$auc
result.table.noprior$susie.aupr[h]<-susie.aupr$auc.davis.goadrich
roc.re<-roc(na.omit(tbeta[[h]]!=0)~(cs.results$V1))
roc.re
annot.coef<-read.table(paste0('post_large_',ref.table$chr[h],'_',
as.character(ref.table$region_start [h]),'_',ref.table$region_end[h],'_FALSE_theta.txt'))
annot<-read.table(paste0('/Volumes/My_Passport/1000Genome/tenth_dataset/data/large/',
ref.table$chr[h],'_',
as.character(ref.table$region_start [h]),'_',ref.table$region_end[h],
'.deepsea'),header=T)
prior.prob<-as.matrix(annot)%*%as.matrix(annot.coef)
plot(prior.prob)
roc.re<-roc(na.omit(tbeta[[h]]!=0)~(prior.prob[,1]))
roc.re
pp<-exp(prior.prob)/max(exp(prior.prob))
pp
roc.re<-roc(na.omit(tbeta[[h]]!=0)~(prior.prob[,1]))
roc.re
aupr<-aupr.fun(prior.prob[,1],na.omit(tbeta[[h]]!=0))
aupr
plot(pp)
result.table<-data.frame(matrix(NA,95,2))
tbeta<-tbeta.list[[1]]
for(g in 2){
setwd(paste0('/Volumes/My_Passport/1000Genome/eta_sensitivity/Output/',cs.index[g]))
for(h in 1:95){
print(h)
annot.coef<-read.table(paste0('post_large_',ref.table$chr[h],'_',
as.character(ref.table$region_start [h]),'_',ref.table$region_end[h],'_FALSE_theta.txt'))
annot<-read.table(paste0('/Volumes/My_Passport/1000Genome/tenth_dataset/data/large/',
ref.table$chr[h],'_',
as.character(ref.table$region_start [h]),'_',ref.table$region_end[h],
'.deepsea'),header=T)
prior.prob<-as.matrix(annot)%*%as.matrix(annot.coef)
#pp<-exp(prior.prob)/max(exp(prior.prob))
true.beta<-which(tbeta[[h]]!=0)
roc.re<-roc(na.omit(tbeta[[h]]!=0)~(prior.prob[,1]))
aupr<-aupr.fun(prior.prob[,1],na.omit(tbeta[[h]]!=0))
result.table[h,]<-c(roc.re$auc,aupr$auc.davis.goadrich)
}
}
result.table
result.table
# write.table(plot.data,'/Users/liam/Dropbox/Prior_info/FINEMAPPING/Report/Real_data_anlaysis/plots/aupr_improve_prior.txt',
#             row.names = F,col.names = T,quote=F)
table.all.list[[3]]<-result.table
saveRDS(table.all.list,'/Users/zikunyang/Dropbox/Prior_info/FINEMAPPING/Report/Real_data_anlaysis/plots/aupr_improve_prior.RData')
plot.data[[1]]<-data.frame(No_prior=table.all.list[[1]][,1],
with_prior=table.all.list[[2]][,1],
`AUPR of Prior`=table.all.list[[3]][,1])
plot.data[[2]]<-data.frame(No_prior=table.all.list[[1]][,2],
with_prior=table.all.list[[2]][,2],
`AUPR of Prior`=table.all.list[[3]][,2])
plot.list<-list()
plot.list[[1]]<-  ggplot(plot.data[[1]], aes(x=No_prior, y=with_prior, colour=plot.data[[1]][,3])) +
geom_point(aes(colour=plot.data[[1]][,3]), size=5) + ylim(c(0,1))+xlim(c(0,1))+
geom_point(shape = 1,size = 5,colour = "black")+
theme_bw()+geom_abline(intercept = 0,slope=1,color='grey',alpha=0.5)+
ggtitle('CS model: Comparison of AUROC')+
#scale_colour_gradient(low = "red", high = "firebrick4")+
scale_colour_gradient2(low = "red", high = "red4",limits=c(0,1))+
guides(colour=guide_legend(title="AUPR of Prior Probs."))+
ylab('AUROC with Annot.')+xlab('AUROC no Annot.')+theme(
plot.title = element_text( size=24, face="bold.italic"),
axis.title.x = element_text( size=20, face="bold"),
legend.position = "none",
legend.title=element_text(size=15),
legend.text=element_text(size=15),
panel.border = element_blank()
)
plot.list[[2]]<-  ggplot(plot.data[[2]], aes(x=No_prior, y=with_prior, colour=plot.data[[2]][,3])) +
geom_point(aes(colour=plot.data[[2]][,3]), size=5) + ylim(c(0,1))+xlim(c(0,1))+
geom_point(shape = 1,size = 5,colour = "black")+
theme_bw()+geom_abline(intercept = 0,slope=1,color='grey',alpha=0.5)+
ggtitle('CS model: Comparison of AUPR')+
#scale_colour_gradient(low = "red", high = "firebrick4")+
scale_colour_gradient2(low = "red", high = "red4",breaks=c(0,0.25,0.5,0.75,1),labels=c(0,0.25,0.5,0.75,1))+
guides(colour=guide_legend(title="AUPR of Prior Probs."))+
ylab('AUPR with Annot.')+xlab('AUPR no Annot.')+theme(
plot.title = element_text( size=24, face="bold.italic"),
axis.title.x = element_text( size=20, face="bold"),
legend.position = "none",
legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.title.y = element_text( size=20, face="bold"),
axis.text.x = element_text( size=20, face="bold"),panel.border = element_blank()
)
plot.list[[1]]<-plot.list[[1]]+theme(legend.position = "bottom",
axis.title.y = element_text( size=20, face="bold"),
axis.text.x = element_text( size=20, face="bold"))
legend = gtable_filter(ggplot_gtable(ggplot_build(plot.list[[1]])), "guide-box")
ml<-grid.arrange(arrangeGrob(   plot.list[[1]]+theme(legend.position = "none"),
plot.list[[2]],
nrow = 1,ncol=2),legend, ncol=1,nrow=2,widths=10 ,heights=c(10,.5))
ml
plot.list[[1]]
plot.data<-list()
plot.data[[1]]<-data.frame(No_prior=table.all.list[[1]][,1],
with_prior=table.all.list[[2]][,1],
`AUPR of Prior`=table.all.list[[3]][,1])
plot.data[[2]]<-data.frame(No_prior=table.all.list[[1]][,2],
with_prior=table.all.list[[2]][,2],
`AUPR of Prior`=table.all.list[[3]][,2])
plot.list<-list()
plot.list[[1]]<-  ggplot(plot.data[[1]], aes(x=No_prior, y=with_prior, colour=plot.data[[1]][,3])) +
geom_point(aes(colour=plot.data[[1]][,3]), size=5) + ylim(c(0,1))+xlim(c(0,1))+
geom_point(shape = 1,size = 5,colour = "black")+
theme_bw()+geom_abline(intercept = 0,slope=1,color='grey',alpha=0.5)+
ggtitle('CS model: Comparison of AUROC')+
#scale_colour_gradient(low = "red", high = "firebrick4")+
scale_colour_gradient2(low = "red", high = "red4",limits=c(0,1))+
guides(colour=guide_legend(title="AUROC or AUPR of the Prior Probs."))+
ylab('AUROC with Annot.')+xlab('AUROC no Annot.')+theme(
plot.title = element_text( size=24, face="bold.italic"),
axis.title.x = element_text( size=20, face="bold"),
legend.position = "none",
legend.title=element_text(size=15),
legend.text=element_text(size=15),
panel.border = element_blank()
)
plot.list[[2]]<-  ggplot(plot.data[[2]], aes(x=No_prior, y=with_prior, colour=plot.data[[2]][,3])) +
geom_point(aes(colour=plot.data[[2]][,3]), size=5) + ylim(c(0,1))+xlim(c(0,1))+
geom_point(shape = 1,size = 5,colour = "black")+
theme_bw()+geom_abline(intercept = 0,slope=1,color='grey',alpha=0.5)+
ggtitle('CS model: Comparison of AUPR')+
#scale_colour_gradient(low = "red", high = "firebrick4")+
scale_colour_gradient2(low = "red", high = "red4",breaks=c(0,0.25,0.5,0.75,1),labels=c(0,0.25,0.5,0.75,1))+
guides(colour=guide_legend(title="AUPR of Prior Probs."))+
ylab('AUPR with Annot.')+xlab('AUPR no Annot.')+theme(
plot.title = element_text( size=24, face="bold.italic"),
axis.title.x = element_text( size=20, face="bold"),
legend.position = "none",
legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.title.y = element_text( size=20, face="bold"),
axis.text.x = element_text( size=20, face="bold"),panel.border = element_blank()
)
plot.list[[1]]<-plot.list[[1]]+theme(legend.position = "bottom",
axis.title.y = element_text( size=20, face="bold"),
axis.text.x = element_text( size=20, face="bold"))
legend = gtable_filter(ggplot_gtable(ggplot_build(plot.list[[1]])), "guide-box")
ml<-grid.arrange(arrangeGrob(   plot.list[[1]]+theme(legend.position = "none"),
plot.list[[2]],
nrow = 1,ncol=2),legend, ncol=1,nrow=2,widths=10 ,heights=c(10,.5))
ggsave('/Users/zikunyang/Dropbox/Prior_info/FINEMAPPING/Report/Real_data_anlaysis/plots/AUROC_AUPR_improve_prior.pdf', ml,
width  = unit(16, "inch"), height = unit(8, "inch"))
#install.packages("devtools")
#devtools::install_github("klutometis/roxygen")
rm(list=ls())
# install.packages('Rcpp')
# install.packages('RcppArmadillo')
#install.packages('RcppGSL')
#install.packages('roxygen2')
library("devtools")
library(roxygen2)
library(Rcpp)
#install.packages("pkgKitten")
library(RcppArmadillo)
library(tools)
library(RcppGSL)
#RcppArmadillo.package.skeleton("test")
setwd('/Users/zikunyang/Documents/GitHub/CARMA')
#setwd('/Users/liam/Dropbox/Prior_info/FINEMAPPING/Package/CARMA')
#setwd('/Users/zikunyang/Documents/Meeting_Prof.Iuliana/Fine-mapping/Coding/package/CARMA')
document()
build()
#setwd('/Users/liam/Dropbox/Prior_info/FINEMAPPING/Package/CARMA')
#setwd('/Users/zikunyang/Documents/Meeting_Prof.Iuliana/Fine-mapping/Coding/package/CARMA')
document()
install.packages('/Users/zikunyang/Documents/GitHub/CARMA_1.0.tar.gz')
install.packages('/Users/zikunyang/Documents/GitHub/CARMA_1.0.tar.gz', repos = NULL, type="source")
library(CARMA)
knitr::opts_chunk$set(echo = TRUE)
Z<-read.table('/Users/liam/Dropbox/Prior_info/FINEMAPPING/Package/Vignettes/data/chr11_128952507_129961171',header=T)
Z<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171',header=T)
true.beta<-c(645,804,1900)
plot(Z$Zscore,ylab='Z scores',xlab='SNPs',main="Locus: chr11 128952507-129961171")
points(true.beta,Z$Zscore[true.beta],col=2,pch=19)
Z<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171',header=T)
true.beta<-c(645,804,1900)
plot(Z$Zscore,ylab='Z scores',xlab='SNPs',main="Locus: chr11 128952507-129961171")
points(true.beta,Z$Zscore[true.beta],col=2,pch=19)
legend("topleft",legend=c("Casual SNPs","Non-Causal"),pch=c(19,1),col=c(2,1))
CARMA.results<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171_68_no_annot.RData')
color.index<-rep(1,length(CARMA.results[[1]]$PIPs))
color.index[true.beta]<-2
color.index
par(mfrow=c(2,1),mar=c(2,2,2,1))
plot(Z$Zscore,ylab='Z scores',xlab='SNPs',main="Locus: chr11 128952507-129961171")
points(true.beta,Z$Zscore[true.beta],col=2,pch=19)
legend("topleft",legend=c("Casual SNPs","Non-Causal"),pch=c(19,1),col=c(2,1))
barplot(CARMA.results[[1]]$PIPs,col=color.index,border=color.index,xlab="SNPs",ylab="PIPs",main="CARMA's results")
results.table<-data.frame(`SNPs index`=1:nrow(Z),
`Causal status`=rep("Non-causal",nrow(Z)),
`Z scores`=Z$Zscore,
PIPs=CARMA.results[[1]]$PIPs)
results.table[true.beta,2]<-"True causal"
print(results.table[order(CARMA.results[[1]]$PIPs,decreasing = T)[1:20],],include.rownames = F)
CARMA.results[[1]]$`Credible set`[[2]]
CARMA.results[[1]]$`Credible model`[[3]]
CARMA.results<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171_68_full_annot.RData')
color.index<-rep(1,length(CARMA.results[[1]]$PIPs))
color.index[true.beta]<-2
l.p<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171_prior_predictions.txt')
prior.prob<-exp(l.p-max(l.p))
par(mfrow=c(3,1),mar=c(2,4,2,1))
plot(Z$Zscore,ylab='Z scores',xlab='SNPs',main="Locus: chr11 128952507-129961171")
points(true.beta,Z$Zscore[true.beta],col=2,pch=19)
legend("topleft",legend=c("Casual SNPs","Non-Causal"),pch=c(19,1),col=c(2,1))
plot(prior.prob[,1],main="CARMA's prior ranking of SNPs",xlab='SNPs',ylab='Predictions')
points(true.beta,prior.prob[true.beta,1],col=2,pch=19)
barplot(CARMA.results[[1]]$PIPs,col=color.index,border=color.index,xlab="SNPs",ylab="PIPs",main="CARMA's posterior probability")
results.table<-data.frame(`SNPs index`=1:nrow(Z),
`Causal status`=rep("Non-causal",nrow(Z)),
`Z scores`=Z$Zscore,
PIPs=CARMA.results[[1]]$PIPs)
results.table[true.beta,2]<-"True causal"
print(results.table[order(CARMA.results[[1]]$PIPs,decreasing = T)[1:20],],include.rownames = F)
CARMA.results[[1]]$`Credible set`[[2]]
CARMA.results[[1]]$`Credible model`[[3]]
Data1<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_1.processed',header=T)
Data1<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_1.processed',header=T)
Data1<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_1.processed',header=T)
print(head(Data1))### Printing the head of the data of locus ADAMTS4
Data2<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_2.processed',header=T)
print(head(Data2))### Printing the head of the data of locus CR1
par(mfrow=c(2,1), mar=c(5,5,4,2))
plot(Data1$BP,Data1$Z,main=bquote(bolditalic(ADAMTS4)),ylab = 'Z-scores',xlab='Position',xaxt='n',cex.main=1.5,cex.lab=1)
x.index<-quantile(Data1$BP)
axis(1,at=x.index,labels = paste0(round(quantile(x.index)/1e+6,1),'Mb'),cex.axis=1)
plot(Data2$BP,Data2$Z,main=bquote(bolditalic(CR1)),ylab = 'Z-scores',xlab='Position',xaxt='n',cex.main=1.5,cex.lab=1)
x.index<-quantile(Data2$BP)
axis(1,at=x.index,labels = paste0(round(quantile(x.index)/1e+6,1),'Mb'),cex.axis=1)
Data_ADAMTS4<-readRDS('ADAMTS4.RData')
Data_ADAMTS4<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/ADAMTS4.RData')
Data_CR1<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/CR1.RData')
adding.points.func<-function(pip,credible.set,pch,color.index){
if(sum(pip>0.99)>=3){
n.color <- length(credible.set)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector[which(!is.na( unlist(lapply(credible.set, function(x)(match(which.max(pip),x))))))]<-color.index
single.index<-which(unlist(lapply(credible.set,length))==1)
for(cs in single.index){
points(pro.data$BP[credible.set[[cs]]],(pro.data$Z)[credible.set[[cs]]],
col=1,pch=pch,cex=2,lwd=1,bg=col_vector[cs])
}
}else{
points(pro.data$BP[which.max(pip)],pro.data$Z[which.max(pip)],
col=1,
pch=c(rep(pch,8)),cex=2,lwd=1,bg=c(rep(color.index,1)))
}
}
library(RColorBrewer)
PIP_fun<-function(pip, model.name,credible.set,pch,color.index){
top.index<-which.max(pip)
plot(x=pro.data$BP,y=pip,ylim=c(0,1),main=model.name,ylab=expression(bold('PIP')),
xlab=expression(bold('Position')),cex.main=1.5,cex.axis=1,cex.lab=1.5,xaxt='n',pch=19,cex=0.5,frame.plot = F)
axis(1,at=x.index,labels = paste0(round((x.index)/1e+6,2),'Mb'),cex.axis=1)
if(!isFALSE(credible.set)){
n.color <- length(credible.set)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector[which(!is.na( unlist(lapply(credible.set, function(x)(match(which.max(pip),x))))))]<-color.index
for(cs in 1:length(credible.set)){
points(pro.data$BP[credible.set[[cs]]],(pip)[credible.set[[cs]]],
col=1,pch=pch,cex=1,lwd=1,bg=col_vector[cs])
}
}
if(!sum(pip>0.99)>=3){
points(pro.data$BP[top.index],(pip)[top.index],
col=1,pch=pch,cex=1.2,lwd=1,bg=color.index)
pos.index=2
if(pro.data$BP[top.index]<quantile(pro.data$BP,0.4)){
pos.index<-4
}
if(pip[top.index]<0.1){
pos.index<-3
}
text(pro.data$BP[top.index],pip[top.index],
labels = pro.data$SNP[top.index],pos=pos.index,cex=1)
}
}
pro.data<-(read.table(paste0('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_1.processed'),header=T))
carma<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_1.RData')
carma_annot<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr1.RData')
pip.list<-list()
pip.list[[1]]<-carma[[1]]$PIPs
pip.list[[2]]<-carma_annot[[1]]$PIPs
cs.list<-list()
cs.list[[1]]<-carma[[1]]$`Credible set`[[2]]
cs.list[[2]]<-carma_annot[[1]]$`Credible set`[[2]]
par(mfrow=c(3,1))
plot(pro.data$BP,pro.data$Z,main='ADAMTS4',
ylab =expression(bold('Z-scores')),xlab=expression(bold('Position')) ,cex.main=2,
cex.lab=1.5,cex.axis=1.5,mar=c(5,5,4,2),xaxt='n',cex=0.5,pch=19,frame.plot = F)
x.index<-quantile(pro.data$BP,probs = seq(0,1,length.out=6))
# x.index[4]<-161400000
axis(1,at=x.index,labels = paste0(round((x.index)/1e+6,2),'Mb'),cex.axis=1)
adding.points.func(pip.list[[1]],cs.list[[1]],24,'#F8766D')
adding.points.func(pip.list[[2]],cs.list[[2]],25,'#F8766D')
PIP_fun(pip.list[[1]],paste0('CARMA'),cs.list[[1]],pch=24,'#F8766D')
PIP_fun(pip.list[[2]],paste0('CARMA',' & Annotations'),cs.list[[2]],pch=25,'#F8766D')
######CR1
pro.data<-(read.table(paste0('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_2.processed'),header=T))
carma<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_2.RData')
carma_annot<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr1.RData')
pip.list<-list()
pip.list[[1]]<-carma[[1]]$PIPs
pip.list[[2]]<-carma_annot[[2]]$PIPs
cs.list<-list()
cs.list[[1]]<-carma[[1]]$`Credible set`[[2]]
cs.list[[2]]<-carma_annot[[2]]$`Credible set`[[2]]
par(mfrow=c(3,1))
plot(pro.data$BP,pro.data$Z,main='CR1',
ylab =expression(bold('Z-scores')),xlab=expression(bold('Position')) ,cex.main=2,
cex.lab=1.5,cex.axis=1.5,mar=c(5,5,4,2),xaxt='n',cex=0.5,pch=19,frame.plot = F)
x.index<-quantile(pro.data$BP,probs = seq(0,1,length.out=6))
# x.index[4]<-161400000
axis(1,at=x.index,labels = paste0(round((x.index)/1e+6,2),'Mb'),cex.axis=1)
adding.points.func(pip.list[[1]],cs.list[[1]],24,'#F8766D')
adding.points.func(pip.list[[2]],cs.list[[2]],25,'#F8766D')
PIP_fun(pip.list[[1]],paste0('CARMA'),cs.list[[1]],pch=24,'#F8766D')
PIP_fun(pip.list[[2]],paste0('CARMA',' & Annotations'),cs.list[[2]],pch=25,'#F8766D')
carma_annot<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr1.RData')
f.index<-c('first','second')
s=1
pro.data<-(read.table(paste0('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_',s,'.processed'),header=T))
for(ss in 1:length(carma_annot[[s]]$`Credible set`[[2]])){
print(paste0('This is the ', f.index[ss],' credible set of the locus ADAMTS4'))
print(data.frame(pro.data[carma_annot[[s]]$`Credible set`[[2]][[ss]],c(2,3,4,5,6,7)],
PIPs=carma_annot[[s]]$PIPs[carma_annot[[s]]$`Credible set`[[2]][[ss]]]))
}
s=2
pro.data<-(read.table(paste0('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_',s,'.processed'),header=T))
for(ss in 1:length(carma_annot[[s]]$`Credible set`[[2]])){
print(paste0('This is the ', f.index[ss],' credible set of the locus CR1'))
print(data.frame(pro.data[carma_annot[[s]]$`Credible set`[[2]][[ss]],c(2,3,4,5,6,7)],
PIPs=carma_annot[[s]]$PIPs[carma_annot[[s]]$`Credible set`[[2]][[ss]]]))
}
carma_annot<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr1.RData')
f.index<-c('first','second')
s=1
pro.data<-(read.table(paste0('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_',s,'.processed'),header=T))
print(paste0('This is the credible model of the locus ADAMTS4'))
print(data.frame(pro.data[carma_annot[[s]]$`Credible model`[[3]],c(2,3,4,5,6,7)],
PIPs=carma_annot[[s]]$PIPs[carma_annot[[s]]$`Credible model`[[3]]]))
s=2
pro.data<-(read.table(paste0('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/p_chr1_',s,'.processed'),header=T))
print(paste0('This is the credible model of the locus CR1'))
print(data.frame(pro.data[carma_annot[[s]]$`Credible model`[[3]],c(2,3,4,5,6,7)],
PIPs=carma_annot[[s]]$PIPs[carma_annot[[s]]$`Credible model`[[3]]]))
CARMA.results<-readRDS('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171_68_no_annot.RData')
color.index<-rep(1,length(CARMA.results[[1]]$PIPs))
color.index[true.beta]<-2
Z<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171',header=T)
true.beta<-c(645,804,1900)
plot(Z$Zscore,ylab='Z scores',xlab='SNPs',main="Locus: chr11 128952507-129961171")
points(true.beta,Z$Zscore[true.beta],col=2,pch=19)
legend("topleft",legend=c("Casual SNPs","Non-Causal"),pch=c(19,1),col=c(2,1))
Z<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171',header=T)
true.beta<-c(645,804,1900)
plot(Z$Zscore,ylab='Z scores',xlab='SNPs',main="Locus: chr11 128952507-129961171")
Z<-read.table('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data/chr11_128952507_129961171',header=T)
true.beta<-c(645,804,1900)
plot(Z$Zscore,ylab='Z scores',xlab='SNPs',main="Locus: chr11 128952507-129961171")
points(true.beta,Z$Zscore[true.beta],col=2,pch=19)
legend("topleft",legend=c("Casual SNPs","Non-Causal"),pch=c(19,1),col=c(2,1))
Data_ADAMTS4<-readRDS('ADAMTS4.RData')
setwd('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data')
Data_ADAMTS4<-readRDS('ADAMTS4.RData')
Data_CR1<-readRDS('CR1.RData')
z.list<-list()ld.list<-list()
z.list[[1]]<-Data_ADAMTS4$`Meta-data`$Z
z.list[[2]]<-Data_CR1$`Meta-data`$Z
ld.list[[1]]<-Data_ADAMTS4$LD
ld.list[[2]]<-Data_CR1$LD
ld.list<-list()
z.list[[1]]<-Data_ADAMTS4$`Meta-data`$Z
z.list[[2]]<-Data_CR1$`Meta-data`$Z
ld.list[[1]]<-Data_ADAMTS4$LD
ld.list[[2]]<-Data_CR1$LD
z.list<-list()
ld.list<-list()
z.list[[1]]<-Data_ADAMTS4$`Meta-data`$Z
z.list[[2]]<-Data_CR1$`Meta-data`$Z
ld.list[[1]]<-Data_ADAMTS4$LD
ld.list[[2]]<-Data_CR1$LD
CARMA.results_no_annot<-CARMA_fixed_sigma(z.list,ld.list,effect.size.prior='Hyper-g')
library(CARMA)
CARMA.results_no_annot<-CARMA_fixed_sigma(z.list,ld.list,effect.size.prior='Hyper-g')
#RcppArmadillo.package.skeleton("test")
setwd('/Users/zikunyang/Documents/GitHub/CARMA')
#setwd('/Users/liam/Dropbox/Prior_info/FINEMAPPING/Package/CARMA')
#setwd('/Users/zikunyang/Documents/Meeting_Prof.Iuliana/Fine-mapping/Coding/package/CARMA')
document()
build()
install.packages('/Users/zikunyang/Documents/GitHub/CARMA_1.0.tar.gz', repos = NULL, type="source")
library(CARMA)
setwd('/Volumes/My_Passport/Fine-mapping/[Vignettes]/data')
Data_ADAMTS4<-readRDS('ADAMTS4.RData')
Data_CR1<-readRDS('CR1.RData')
z.list<-list()
ld.list<-list()
z.list[[1]]<-Data_ADAMTS4$`Meta-data`$Z
z.list[[2]]<-Data_CR1$`Meta-data`$Z
ld.list[[1]]<-Data_ADAMTS4$LD
ld.list[[2]]<-Data_CR1$LD
CARMA.results_no_annot<-CARMA_fixed_sigma(z.list,ld.list,effect.size.prior='Hyper-g')
library(CARMA)
CARMA.results_no_annot<-CARMA_fixed_sigma(z.list,ld.list,effect.size.prior='Hyper-g')
remove.packages("CARMA")
install.packages('/Users/zikunyang/Documents/GitHub/CARMA_1.0.tar.gz', repos = NULL, type="source")
library(CARMA)
library(CARMA)
CARMA.results_no_annot<-CARMA_fixed_sigma(z.list,ld.list,effect.size.prior='Hyper-g')
CARMA::CARMA
library(CARMA)
CARMA::CARMA
?install.packages
setwd('/Users/zikunyang/Documents/GitHub/CARMA')
document()
build()
